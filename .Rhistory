packageVersion("swirl")
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/51
0.8
1.6*0.8/2
.64
mypdf
integrate(mypdf,0,1.6)
1
2
sqrt(2)
.997*0.001
.985*(-0.001)
(1-.985)*(-0.001)
(1-.985)*(1-0.001)
0.000997/(0.000997+0.014985)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
Xmean <- sum(temp["X",] * temp["Prob",])
Xmean
swirl()
1/6
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5 *( edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
library(ggmap)
map<-get_map(location="austin",zoom=12,source="osm")
# make this an external chunk that can be included in any file
# make this an external chunk that can be included in any file
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
runif(1)
install.packages('UsingR')
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
runif(1)
library(manipulate)
install.packages('manipulate)')
install.packages('manipulate')
library(UsingR); data(galton); library(reshape); long <- melt(galton)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
library(UsingR); data(galton); library(reshape); long <- melt(galton)
install.packages('reshape')
g <- ggplot(long, aes(x = value, fill = variable))
library(UsingR); data(galton); library(reshape); long <- melt(galton)
library(UsingR); data(galton); library(reshape); long <- melt(galton)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
library(manipulate)
myHist <- function(mu){
mse <- mean((galton$child - mu)^2)
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour = "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
ggplot(galton, aes(x = parent, y = child)) + geom_point()
library(dplyr)
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = galton)
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
lm1 <- lm(galton$child ~ galton$parent)
g <- g + geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], size = 3, colour = grey(.5))
g
source(“http://biostat.jhsph.edu/~jleek/code/googleCite.r”)
install.packages('source')
source('http://biostat.jhsph.edu/~jleek/code/googleCite.r')
out=googleCite('https://scholar.google.com/citations?user=8hsKpfMAAAAJ&hl=en', pdfname='muldoon_wordcloud.pdf')
out=searchCite("Gail Muldoon",pdfname="muldoon_wordcloud.pdf")
gcSummary(out)
out=googleCite('https://scholar.google.com/citations?user=8hsKpfMAAAAJ&hl=en', pdfname='muldoon_wordcloud.pdf')
out=searchCite("Gail Gutowski",pdfname="muldoon_wordcloud.pdf")
out=googleCite('https://scholar.google.com/citations?user=HluYWesAAAAJ&hl=en&oi=ao', pdfname='muldoon_wordcloud.pdf')
out=searchCite("Gail Muldoon",pdfname="muldoon_wordcloud.pdf",plotIt=TRUE)
source('~/Documents/Personal/Projects/Side Projects/Google Scholar/Scholar_visuals.R', echo=TRUE)
install.packages('scholar')
library(scholar)
library(scholar)
library(ggplot2)
cit <- get_citation_history('8hsKpfMAAAAJ')
png('scholar_citations_8hsKpfMAAAAJ.png',width=800,height=300,res=150)
ggplot(cit,aes(x=year,y=cites))+
geom_bar(stat='identity')+
theme_bw()+
xlab('Year of citation')+
ylab('Google Scholar\n cites')+
annotate('text',label=format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"),x=-Inf,y=Inf,vjust=1.5,hjust=-0.05,size=3,colour='gray')
dev.off()
library(scholar)
library(ggplot2)
cit <- get_citation_history('8hsKpfMAAAAJ')
png('scholar_citations_8hsKpfMAAAAJ.png',width=800,height=300,res=150)
ggplot(cit,aes(x=year,y=cites))+
geom_bar(stat='identity')+
theme_bw()+
xlab('Year of citation')+
ylab('Google Scholar\n cites')+
annotate('text',label=format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"),x=-Inf,y=Inf,vjust=1.5,hjust=-0.05,size=3,colour='gray')
dev.off()
ggplot(cit,aes(x=year,y=cites))+
geom_bar(stat='identity')+
theme_bw()+
xlab('Year of citation')+
ylab('Google Scholar\n cites')+
annotate('text',label=format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"),x=-Inf,y=Inf,vjust=1.5,hjust=-0.05,size=3,colour='gray')
cit
out=googleCite('https://scholar.google.com/citations?user=8hsKpfMAAAAJ&hl=en')
out=googleCite('https://scholar.google.com/citations?user=8hsKpfMAAAAJ&hl=en')
unsource
exit
author="Gail Gutowski"
for (ipage in 0:1000){
checker <- ipage * 100
page = paste(theurl, "&view_op=list_works&pagesize=100&cstart=", checker, sep="")
temper <- getcites(page, checkcite=checker)
alldata <- rbind(alldata, temper$data)
if (temper$stopit == 1) break
}
theurl="https://scholar.google.com/citations?user=8hsKpfMAAAAJ&hl=en"
for (ipage in 0:1000){
checker <- ipage * 100
page = paste(theurl, "&view_op=list_works&pagesize=100&cstart=", checker, sep="")
temper <- getcites(page, checkcite=checker)
alldata <- rbind(alldata, temper$data)
if (temper$stopit == 1) break
}
source('http://biostat.jhsph.edu/~jleek/code/googleCite.r')
for (ipage in 0:1000){
checker <- ipage * 100
page = paste(theurl, "&view_op=list_works&pagesize=100&cstart=", checker, sep="")
temper <- getcites(page, checkcite=checker)
alldata <- rbind(alldata, temper$data)
if (temper$stopit == 1) break
}
theurl = strsplit(theurl,"&hl")[[1]][1]
alldata <- NULL
author="Gail Gutowski"
for (ipage in 0:1000){
checker <- ipage * 100
page = paste(theurl, "&view_op=list_works&pagesize=100&cstart=", checker, sep="")
temper <- getcites(page, checkcite=checker)
alldata <- rbind(alldata, temper$data)
if (temper$stopit == 1) break
}
alldata$"First Author" <- NA
alldata$"Second Author" <- NA
alldata$"Last Author" <- NA
alldata$"N Authors" <- NA
for(irow in 1:nrow(alldata)){
tmp = strsplit(alldata$Author[irow], ",")[[1]]
alldata$"First Author"[irow] <- tmp[1]
alldata$"Second Author"[irow] <- tmp[2]
alldata$"Last Author"[irow] <- tmp[length(tmp)]
alldata$"N Authors"[irow] <- length(tmp)
}
library(scholar)
my_id = "8hsKpfMAAAAJ"
all_publications = get_all_publications(my_id)
source("./get_all_publications.R")
source('./get_all_publications.R',local=TRUE)
source('./googleCite.R',local=TRUE)
setwd('/Users/gail/Documents/Personal/Projects/Side Projects/Google Scholar')
source('./get_all_publications.R',local=TRUE)
source('./get_all_publications.R',local=TRUE)
my_id = "8hsKpfMAAAAJ"
all_publications = get_all_publications(my_id)
all_publications = get_all_publications(my_id)
source('./get_all_publications.R',local=TRUE)
my_id = "8hsKpfMAAAAJ"
all_publications = get_all_publications(my_id)
dim(all_publications)
table(all_publications$year)
summary(all_publications$cites)
all_authors = get_all_coauthors(my_id, me="PART OF MY NAME")
source('./get_all_coauthors.R',local=TRUE)
all_authors = get_all_coauthors(my_id, me="PART OF MY NAME")
main_authors = all_authors[all_authors$name %in% names(which(table(all_authors$name)>1))]
all_authors = get_all_coauthors(my_id, me="PART OF MY NAME")
source('./get_all_coauthors.R',local=TRUE)
all_authors = get_all_coauthors(my_id, me="PART OF MY NAME")
source('./get_all_coauthors.R',local=TRUE)
all_authors = get_all_coauthors(my_id, me="PART OF MY NAME")
source('./get_all_coauthors.R',local=TRUE)
all_authors = get_all_coauthors(my_id, me="Gutowski")
main_authors = all_authors[all_authors$name %in% names(which(table(all_authors$name)>1)), ]
library(ggplot2)
p = ggplot(main_authors, aes(x=name)) + geom_bar(fill=brewer.pal(3, "Set2")[2]) +
xlab("co-author") + theme_bw() + theme(axis.text.x = element_text(angle=90, hjust=1))
print(p)
library(ggplot2)
p = ggplot(main_authors, aes(x=name)) + geom_bar(fill=brewer.pal(3, "Set2")[2]) +
xlab("co-author") + theme_bw() + theme(axis.text.x = element_text(angle=90, hjust=1))
all_publications
all_abstracts=get_allabstracts(my_id)
all_abstracts=get_all_abstracts(my_id)
source('./get_all_abstracts.R',local=TRUE)
library(XML)
all_abstracts = get_all_abstracts(my_id)
source('./get__abstract.R',local=TRUE)
source('./get_abstract.R',local=TRUE)
all_abstracts = get_all_abstracts(my_id)
library(tm)
all_abstracts = lapply(all_abstracts, PlainTextDocument)
terms_freq = lapply(all_abstracts, termFreq,
control=list(removePunctuation=TRUE, stopwords=TRUE, removeNumbers=TRUE))
all_words = unique(unlist(lapply(terms_freq, names)))
matrix_terms_freq = lapply(terms_freq, function(astring) {
res = rep(0, length(all_words))
res[match(names(astring), all_words)] = astring
return(res)
})
matrix_terms_freq = Reduce("rbind", matrix_terms_freq)
colnames(matrix_terms_freq) = all_words
words_freq = apply(matrix_terms_freq, 2, sum)
important = words_freq[words_freq > 10]
library(wordcloud)
wordcloud(names(important), important, random.color=TRUE, random.order=TRUE,
color=brewer.pal(12, "Set3"), min.freq=1, max.words=length(important), scale=c(3, 0.3))
important = words_freq[words_freq > 1]
library(wordcloud)
wordcloud(names(important), important, random.color=TRUE, random.order=TRUE,
color=brewer.pal(12, "Set3"), min.freq=1, max.words=length(important), scale=c(3, 0.3))
my_id ="KR8wAHEAAAAJ"
all_publications = get_all_publications(my_id)
setwd('/Users/gail/Documents/Personal/Projects/Side Projects/Google Scholar')
library(scholar)
library(ggplot2)
library(XML)
library(tm)
library(wordcloud)
source('./get_all_publications.R',local=TRUE)
source('./get_all_coauthors.R',local=TRUE)
source('./get_all_abstracts.R',local=TRUE)
source('./get_abstract.R',local=TRUE)
#my_id = "8hsKpfMAAAAJ"
my_id ="KR8wAHEAAAAJ"
all_publications = get_all_publications(my_id)
dim(all_publications)
# [1] 122   8
table(all_publications$year)
# 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015
#1    4    7    7    8    9    7    9   12   11   18    7
summary(all_publications$cites)
#    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   0.000   0.000   0.000   5.566   5.000 140.000
all_authors = get_all_coauthors(my_id, me="Gutowski")
main_authors = all_authors[all_authors$name %in% names(which(table(all_authors$name)>1)), ]
p = ggplot(main_authors, aes(x=name)) + geom_bar(fill=brewer.pal(3, "Set2")[2]) +
xlab("co-author") + theme_bw() + theme(axis.text.x = element_text(angle=90, hjust=1))
print(p)
all_abstracts = get_all_abstracts(my_id)
# transform the abstracts into "plan text documents"
all_abstracts = lapply(all_abstracts, PlainTextDocument)
# find term frequencies within each abstract
terms_freq = lapply(all_abstracts, termFreq,
control=list(removePunctuation=TRUE, stopwords=TRUE, removeNumbers=TRUE))
# finally obtain the abstract/term frequency matrix
all_words = unique(unlist(lapply(terms_freq, names)))
matrix_terms_freq = lapply(terms_freq, function(astring) {
res = rep(0, length(all_words))
res[match(names(astring), all_words)] = astring
return(res)
})
matrix_terms_freq = Reduce("rbind", matrix_terms_freq)
colnames(matrix_terms_freq) = all_words
# deduce the term frequencies
words_freq = apply(matrix_terms_freq, 2, sum)
# keep only the most frequent and after a bit of cleaning up (not shown) make the word cloud
important = words_freq[words_freq > 1]
wordcloud(names(important), important, random.color=TRUE, random.order=TRUE,
color=brewer.pal(12, "Set3"), min.freq=1, max.words=length(important), scale=c(3, 0.3))
ggplot(main_authors,aes(x=name))
p = ggplot(data=main_authors, aes(x=name)) + geom_bar(fill=brewer.pal(3, "Set2")[2]) +
xlab("co-author") + theme_bw() + theme(axis.text.x = element_text(angle=90, hjust=1))
table(all_publications$year)
my_id ="KR8wAHEAAAAJ"
all_publications = get_all_publications(my_id)
dim(all_publications)
my_id = "8hsKpfMAAAAJ"
all_publications = get_all_publications(my_id)
dim(all_publications)
my_id ="KR8wAHEAAAAJ"
all_publications = get_all_publications(my_id)
dim(all_publications)
my_id = "8hsKpfMAAAAJ"
all_publications = get_all_publications(my_id)
dim(all_publications)
table(all_publications$year)
all_publications$cites
all_publications$year
head(all+publications)
head(all_publications)
str(all_publications)
my_id="2-g4_DkAAAAJ"
all_publications = get_all_publications(my_id)
dim(all_publications)
table(all_publications$year)
summary(all_publications$cites)
all_authors = get_all_coauthors(my_id, me="Gutowski")
main_authors = all_authors[all_authors$name %in% names(which(table(all_authors$name)>1)), ]
p = ggplot(data=main_authors, aes(x=name)) + geom_bar(fill=brewer.pal(3, "Set2")[2]) +
xlab("co-author") + theme_bw() + theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(main_authors, aes(x=name))
main_authors$name
ggplot(main_authors, aes())
p = ggplot(all_authors, aes(x=name)) + geom_bar(fill=brewer.pal(3, "Set2")[2]) +
xlab("co-author") + theme_bw() + theme(axis.text.x = element_text(angle=90, hjust=1))
ggplot(all_authors, aes(x=name)) + geom_bar(fill=brewer.pal(3, "Set2")[2]) +
xlab("co-author") + theme_bw() + theme(axis.text.x = element_text(angle=90, hjust=1))
str(all_authors)
str(main_authors)
p = ggplot(main_authors, aes(x=name)) + geom_bar(fill=brewer.pal(3, "Set2")[2]) +
xlab("co-author") + theme_bw() + theme(axis.text.x = element_text(angle=90, hjust=1))
p = ggplot(all_authors, aes(x=name)) + geom_bar(fill=brewer.pal(3, "Set2")[2]) +
xlab("co-author") + theme_bw() + theme(axis.text.x = element_text(angle=90, hjust=1))
which(table(all_authors$name)>1))
which(table(all_authors$name)>1)
all_authors[all_authors$name %in% names(which(table(all_authors$name)>1)), ]
all_abstracts = get_all_abstracts(my_id)
